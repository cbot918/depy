apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-simple-ingress-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-reader
rules:
- apiGroups: [""]
  resources: ["services","secrets"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["extensions","networking.k8s.io"]
  resources: ["ingresses",]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-reader
subjects: 
- kind: ServiceAccount
  name: kubernetes-simple-ingress-controller
  namespace: depy
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kubernetes-simple-ingress-controller
  namespace: depy
  labels:
    app: ingress-controller
spec:
  selector:
    matchLabels:
      app: ingress-controller
  template:
    metadata:
      labels:
        app: ingress-controller
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: kubernetes-simple-ingress-controller
      containers:
        - name: kubernetes-simple-ingress-controller
          image: darkedges/custom-ingress:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443